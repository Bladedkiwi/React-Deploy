{"version":3,"sources":["index.js"],"names":["myfirstelement","ReactDOM","render","document","getElementById","create","React","createElement","desiredContainer","querySelector","domContainer","ShoppingList","className","this","props","name","Component","listName","LikeButton","state","liked","onClick","setState","Square","value","Board","squares","Array","fill","i","slice","handleClick","renderSquare","Game"],"mappings":"gMAGMA,EAAiB,8CAEvBC,IAASC,OAAOF,EAAgBG,SAASC,eAAe,SAExD,IAAMC,EAASC,IAAMC,cACfC,EAAmBL,SAASM,cAAc,aAC1CC,EAAeP,SAASM,cAAc,0BAEtCE,E,uKAMJ,OAAON,EACN,MACA,CAAEO,UAAW,iBACbP,EAAO,KAAM,KAAM,qBAAsBQ,KAAKC,MAAMC,MACpDV,EACC,KACA,KACAA,EAAO,KAAM,KAAM,WACnBA,EAAO,KAAM,KAAM,SACnBA,EAAO,KAAM,KAAM,c,GAfIC,IAAMU,WAoB3BC,EAAW,cAACN,EAAD,CAAcI,KAAK,cAE9BG,E,kDAEL,WAAYJ,GAAQ,IAAD,8BAClB,cAAMA,IACDK,MAAQ,CAAEC,OAAO,GAFJ,E,qDAKT,IAAD,OACR,OAAIP,KAAKM,MAAMC,MACP,kBAGDf,EACN,SACA,CAAEgB,QAAS,kBAAM,EAAKC,SAAS,CAAEF,OAAO,MACxC,Y,GAfsBd,IAAMU,WAmBzBO,E,kDACL,WAAYT,GAAQ,IAAD,8BAGlB,cAAMA,IAEDK,MAAQ,CACZK,MAAO,MANU,E,qDAST,IAAD,OACR,OAKI,aAJH,CAIG,UAAQZ,UAAU,SAChBS,QAAS,kBAAM,EAAKP,MAAMO,WAD5B,SAGGR,KAAKC,MAAMU,Y,GAnBClB,IAAMU,WAyBrBS,E,kDACL,WAAYX,GAAQ,IAAD,8BAClB,cAAMA,IAEDK,MAAQ,CACZO,QAASC,MAAM,GAAGC,KAAK,OAJN,E,wDAONC,GAEV,IAAMH,EAAUb,KAAKM,MAAMO,QAAQI,QACnCJ,EAAQG,GAAK,IACbhB,KAAKS,SAAS,CAAEI,QAASA,M,mCAEfG,GAAI,IAAD,OAIf,OACC,cAACN,EAAD,CACCC,MAAOX,KAAKM,MAAMO,QAAQG,GAC1BR,QAAS,kBAAM,EAAKU,YAAYF,Q,+BAQlC,OACC,gCACC,qBAAKjB,UAAU,SAAf,SAJa,mBAKb,sBAAKA,UAAU,YAAf,UACEC,KAAKmB,aAAa,GAClBnB,KAAKmB,aAAa,GAClBnB,KAAKmB,aAAa,MAEpB,sBAAKpB,UAAU,YAAf,UACEC,KAAKmB,aAAa,GAClBnB,KAAKmB,aAAa,GAClBnB,KAAKmB,aAAa,MAEpB,sBAAKpB,UAAU,YAAf,UACEC,KAAKmB,aAAa,GAClBnB,KAAKmB,aAAa,GAClBnB,KAAKmB,aAAa,a,GA7CJ1B,IAAMU,WAoDpBiB,E,uKAEJ,OACC,sBAAKrB,UAAU,OAAf,UACC,qBAAKA,UAAU,aAAf,SACC,cAACa,EAAD,MAED,sBAAKb,UAAU,YAAf,UACC,wBACA,iC,GATcN,IAAMU,WAkBzBf,IAASC,OAAO,cAAC+B,EAAD,IAAU9B,SAASC,eAAe,aAClDH,IAASC,OAAOe,EAAUT,GAC1BP,IAASC,OAAOG,EAAOa,GAAaR,K","file":"static/js/main.d3f79efb.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst myfirstelement = <h1>Hello React!</h1>;\n\nReactDOM.render(myfirstelement, document.getElementById(\"root\"));\n\nconst create = React.createElement;\nconst desiredContainer = document.querySelector(\".shopping\");\nconst domContainer = document.querySelector(\"#like_button_container\");\n\nclass ShoppingList extends React.Component {\n\trender() {\n\t\t//returns what we want rendered or displayed\n\t\t//the use of className instead of class\n\t\t//also, props is short for properties - so shopping list properties or paramater passed in under name\n\t\t//the ul is created with nested li elements, and grouped together in a similar fashion\n\t\treturn create(\n\t\t\t\"div\",\n\t\t\t{ className: \"shopping-list\" },\n\t\t\tcreate(\"h1\", null, \"Shopping List for \", this.props.name),\n\t\t\tcreate(\n\t\t\t\t\"ul\",\n\t\t\t\tnull,\n\t\t\t\tcreate(\"li\", null, \"Cookies\"),\n\t\t\t\tcreate(\"li\", null, \"Bread\"),\n\t\t\t\tcreate(\"li\", null, \"Milk\")\n\t\t\t)\n\t\t);\n\t}\n}\nconst listName = <ShoppingList name=\"Peter Pan\" />;\n\nclass LikeButton extends React.Component {\n\t//props is not used in this class - why did they place it in? Apparently, it's required in constructors to have a super call, and then usage of 'this' after it. Where are the props being passed in? Is it like the event listener, where the event passes in without telling you that happened.\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { liked: false };\n\t}\n\n\trender() {\n\t\tif (this.state.liked) {\n\t\t\treturn \"You liked this.\";\n\t\t}\n\n\t\treturn create(\n\t\t\t\"button\",\n\t\t\t{ onClick: () => this.setState({ liked: true }) },\n\t\t\t\"Like\"\n\t\t);\n\t}\n}\nclass Square extends React.Component {\n\tconstructor(props) {\n\t\t//super() can only be used in sub classes to call the details of its parent\n\t\t//in general, component classes should always have a constructor that has the super(props) call\n\t\tsuper(props);\n\t\t//stat is used to remember things in components, so remember that the X has been marked\n\t\tthis.state = {\n\t\t\tvalue: null,\n\t\t};\n\t}\n\trender() {\n\t\treturn (\n\t\t\t//on\"C\"lick camelcased\n\t\t\t//change value of state when clicked - rather simple way to update the document\n      //<button className=\"square\" onClick={() => this.setState({ value: \"X\" })}>{this.state.value}</button>\n      //In React, it's conventional to use on[Event] names for props which represent events and handle[Event] for the methods which handle the events.\n      <button className=\"square\"\n        onClick={() => this.props.onClick()}\n      >\n        {this.props.value}\n      </button>\n\t\t);\n\t}\n}\n\nclass Board extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t//create the base board to then store where each player has placed.\n\t\tthis.state = {\n\t\t\tsquares: Array(9).fill(null),\n\t\t};\n  }\n  handleClick(i) {\n    //slice creates the copy of the squares array to modify instead of modifying the existing array - the quality of immutability or changing data without actually changing the data, or in otherwords: copying to alter and replacing\n    const squares = this.state.squares.slice();\n    squares[i] = 'X';\n    this.setState({ squares: squares });\n  }\n\trenderSquare(i) {\n    //saves the current board(object)'s state of each square when passed in.\n    //semicolons are used to break the code, using return () and breaking up the Square call increases readability.\n    //passes two props from board to square: value and onClick\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tvalue={this.state.squares[i]}\n\t\t\t\tonClick={() => this.handleClick(i)}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst status = \"Next player: X\";\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"status\">{status}</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(0)}\n\t\t\t\t\t{this.renderSquare(1)}\n\t\t\t\t\t{this.renderSquare(2)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(3)}\n\t\t\t\t\t{this.renderSquare(4)}\n\t\t\t\t\t{this.renderSquare(5)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(6)}\n\t\t\t\t\t{this.renderSquare(7)}\n\t\t\t\t\t{this.renderSquare(8)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Game extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<Board />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-info\">\n\t\t\t\t\t<div>{/* status */}</div>\n\t\t\t\t\t<ol>{/* TODO */}</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"calendar\"));\nReactDOM.render(listName, desiredContainer);\nReactDOM.render(create(LikeButton), domContainer);\n"],"sourceRoot":""}